// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              String     @id @default(uuid())
  email           String
  password        String
  name            String
  createdEmployee Employee[]
  projects        Project[]
  role            Role       @relation(fields: [roleId], references: [id])
  roleId          String
  company         Company    @relation(fields: [companyId], references: [id])
  companyId       String
}

model Company {
  id   String @id @default(uuid())
  name String

  employees Employee[]
  user      User[]
}

model Employee {
  id               String         @id @default(uuid())
  fullName         String
  email            String
  password         String
  phone            String
  role             Role           @relation(fields: [roleId], references: [id])
  roleId           String
  user             User           @relation(fields: [userId], references: [id])
  userId           String
  company          Company        @relation(fields: [companyId], references: [id])
  companyId        String
  projects         Project[]
  tasks            Task[]
  specialization   Specialization @relation(fields: [specializationId], references: [id])
  specializationId String
}

model Project {
  id          String     @id @default(uuid())
  title       String
  description String
  user        User       @relation(fields: [userId], references: [id])
  userId      String
  employees   Employee[]
  tasks       Task[]
}

model Task {
  id               Int            @id @default(autoincrement())
  status           String         @default("PENDING")
  title            String
  description      String
  employeeId       String
  projectId        String
  createdAt        DateTime       @default(now()) @map("created_at")
  timeToCompleat   Int            @map("time_to_compleate")
  currentTime      Int            @map("current_time")
  typeOfTaskId     String         @map("type_of_task_id")
  specializationId String
  employee         Employee       @relation(fields: [employeeId], references: [id])
  project          Project        @relation(fields: [projectId], references: [id])
  specialization   Specialization @relation(fields: [specializationId], references: [id])
  type             TypeOfTask     @relation(fields: [typeOfTaskId], references: [id])
}

model Specialization {
  id        String     @id @default(uuid())
  name      String
  tasks     Task[]
  employees Employee[]
}

model Role {
  id                    String     @id @default(uuid())
  name                  String     @default("employee")
  canEditEmployee       Boolean    @default(false)
  canEditProject        Boolean    @default(false)
  canEditTask           Boolean    @default(false)
  canEditSpecialization Boolean    @default(false)
  canEditRole           Boolean    @default(false)
  user                  User[]
  employee              Employee[]
}

model TypeOfTask {
  id   String @id @default(uuid())
  name String

  task Task[]
}
